<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAD8AAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/P38AExP5AS8v
        sgc/P38AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIDwALy/yBgMD/wAVFT8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3N78AaWn4Azo64UhISONsZ2f/AQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAH8AUFD3AUBA4nFhYek7V1fYAwAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEB/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAAD//////wAAAP//
        ////AAAA//n/v/8AAAD/8P8P/wAAAP/g/wf/AAAA/8D/A/8AAAD/wP8D/wAAAP/A/wP/AAAA/8D/A/8A
        AAD8wP8DfwAAAPjA/wMfAAAA8MD/Ax8AAADgwP8DDwAAAODAwwMHAAAAwMCBAwMAAADAwAEDAwAAAMDA
        AAMDAAAAwMAAAwMAAADAwAADAwAAAMDAAAMDAAAAwOAABwMAAADAwAADAwAAAMAAAAEDAAAAwAAAAAMA
        AADAAAAAAwAAAMAAAAADAAAAwAAAAAMAAADAABAAAwAAAMAAGAADAAAAwAA8AAMAAADAwH4DAwAAAMHA
        /wODAAAA48P/w8cAAADnx//j5wAAAP/P//P/AAAA//////8AAAD//////wAAAP//////AAAA//////8A
        AAA=
</value>
  </data>
</root>